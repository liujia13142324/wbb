<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper  namespace="com.l.wbb.mapper.InfoMapper">
	<!-- 编写sql时 切勿在查询的时候以 * 代替所有列；插入时，也要写上插入字段！-->
	<select id="getAllTheme" resultType="Theme">
		select themeId,themeName from theme
	</select>
	
	
	<insert id="insertInfo" parameterType="Info" >
		<selectKey keyProperty="infoId" keyColumn="infoId" resultType="int" order="BEFORE">
			select nextval("infoId") infoId
		</selectKey>
		insert into info(openid,themeId,infoId,infoContent,publishTime) values(#{user.openid},#{themeId},#{infoId},#{infoContent},now());
	</insert>
	
	
	<!-- 批量插入 -->
	<insert id="insertImage" parameterType="Image">
	    insert into image(infoId,imgPath) 
	    <!-- 数据集的类型：array，list -->
	    <foreach collection="list" item="image" separator="union">
	        select #{image.infoId},#{image.imgPath} from dual
	    </foreach>
	</insert>
	
	
	<!-- resultMap接收结果集 -->
	<select id="getUserHistory" parameterType="String" resultMap="InfoMap">
	     select openid,themeId,infoId,infoContent,publishTime,commentCount from allinfo where openid = #{openid}
	</select>
	
	
	<select id="getImgByOpenId" parameterType="Integer" resultType="Image">
	     select infoId,imgPath from image where infoId = #{infoId}
	</select>
	
	<select id="getImgByThemeId" parameterType="Integer" resultType="Image">
	     select infoId,imgPath from image where infoId = #{infoId}
	</select>
	
	<!-- resultMap接收结果集 -->
	<select id="getThemeInfoByRange"  resultMap="InfoMap">
		<!-- select openid , themeId , infoId ,infoContent , publishTime,commentCount,likeInfoCount
		from  allInfo where themeId=#{param1} and (commentCount+likeinfoCount)=(select max(commentCount+likeinfoCount) from allInfo)
		union (select openid,themeId,infoId,infoContent,publishTime,commentCount,likeInfoCount from allInfo where themeId=#{param1} order by publishTime desc limit #{param2} , #{param3})
	  -->
	  	select openid , themeId , infoId ,infoContent , publishTime,commentCount,likeInfoCount from allInfo where (commentCount+likeinfoCount)=(select max(commentCount+likeinfoCount) from allInfo) and themeId=#{param1} 
		union
		(select a.openid , a.themeId , a.infoId ,a.infoContent , a.publishTime,a.commentCount,a.likeInfoCount from allinfo as a
		where infoId != (select infoid from
		(select openid , themeId , infoId ,infoContent , publishTime,commentCount,likeInfoCount from allInfo  where (commentCount+likeinfoCount)=(select max(commentCount+likeinfoCount) from allInfo) ) as a
		) and themeId=#{param1}  order by publishTime desc limit #{param2} , #{param3})
	  
	  
	</select>
	
	<!-- type:处理结果最终类型               id：映射结果处理的名字 -->
	<resultMap type="Info" id="InfoMap">
	    <id property="infoId" column="infoId"/><!-- 传入的参数 --><!-- 下面有一个 infoMap，很多东西不用写，这个id标签没弄懂 -->
	    <result column="commentCount" property="commentCount"/>
	    <association property="user" column="openId" select="getUserByOpenid"/>
		<collection  property="likeinfo"  column="{infoId=infoId}" select="getLikeInfo">
		</collection>
	    <collection property="imgs" column="infoId" select="getImgByThemeId"/>
	</resultMap>
	
	<insert id="publishComent" parameterType="Comment">
		insert into comment(commentId,openid,infoId,commentContent,publishDate) values(nextval("commentId"),#{user.openid},${infoId},#{commentContent},#{publishDate})
	</insert>
	
	<insert id="addLikeInfo" parameterType="LikeInfo">
		insert into likeInfo(openId,infoId) values(#{openId},${infoId})
	</insert>
	
	<delete id="deleteLikeInfo" parameterType="LikeInfo">
		delete from LikeInfo where openId=#{openId} and infoId=${infoId}
	</delete>
	
	<select id="getCommentByRange" parameterType="Integer" resultMap="commentMap">
		select openId,infoId,commentContent,publishDate from comment where infoId=#{infoId} order by publishDate limit #{start},#{end}  
	</select>
	
	<resultMap type="Comment" id="commentMap">
	<!-- 数据库列的字母大小不影响注入java对象，这里面 column大小写无关 -->
		<result column="infoId" property="infoId"/>
		<result column="commentContent" property="commentContent"/>
		<result column="publishDate" property="publishDate"/>
		<association property="user" column="openId" select="getUserByOpenid"/>
	</resultMap>
	
	<!-- 要换resultMap , 吧likeInfo的值全部查进去 -->
	<select id="getInfoByRange" parameterType="Integer" resultMap="infoMap">
		<!-- select openid , themeId , infoId ,infoContent , publishTime,commentCount,likeInfoCount
		from  allInfo where (commentCount+likeinfoCount)=(select max(commentCount+likeinfoCount) from allInfo)
		union (select openid,themeId,infoId,infoContent,publishTime,commentCount,likeInfoCount from allInfo order by publishTime desc limit #{param1} , #{param2}) -->
	select openid , themeId , infoId ,infoContent , publishTime,commentCount,likeInfoCount from allInfo where (commentCount+likeinfoCount)=(select max(commentCount+likeinfoCount) from allInfo) 
	union
	(select a.openid , a.themeId , a.infoId ,a.infoContent , a.publishTime,a.commentCount,a.likeInfoCount from allinfo as a
	where infoId != (select infoid from
	(select openid , themeId , infoId ,infoContent , publishTime,commentCount,likeInfoCount from allInfo  where (commentCount+likeinfoCount)=(select max(commentCount+likeinfoCount) from allInfo) ) as a
	)  order by publishTime desc limit #{param1} , #{param2})
	
	</select>
	
	<resultMap type="Info" id="infoMap">
	<!-- 数据库列的字母大小不影响注入java对象，这里面 column大小写无关 -->
		<result column="themeId" property="themeId"/>
		<result column="infoId" property="infoId"/>
		<result column="infoContent" property="infoContent"/>
		<result column="publishTime" property="publishTime"/>
		<result column="commentCount" property="commentCount"/>
		<association property="user" column="openId" select="getUserByOpenid"/>
		<collection  property="likeinfo"  column="{infoId=infoId}" select="getLikeInfo">
		</collection>
		<collection  property="imgs" column="infoId" select="getImgByOpenId">
		</collection>
	</resultMap>
	<select id="getUserByOpenid" resultType="User"> select openid,nickName,sex,headimgurl from user where openid=#{openid} </select>
	<select resultType="LikeInfo" id="getLikeInfo">
		select openId,infoId from likeInfo where infoId=#{infoId}
	</select>
</mapper>

